!function(){"use strict";class e{constructor(e,t){var i,n,s;i=this,s=()=>this._inputList.every((e=>e.validity.valid)),(n=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(n="_checkFormValidity"))in i?Object.defineProperty(i,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):i[n]=s,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}setEventListeners(){this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._formElement.addEventListener("reset",(()=>{setTimeout((()=>{this._toggleButtonState()}))})),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent=" ",t.classList.remove(this._errorClass)}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this.setEventListeners()}}function t(e,t,i){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}class i{constructor(e,i,n){t(this,"_handleDelCard",(()=>{this._element.remove(),this._element=null})),t(this,"_handleLikeBtn",(()=>{this._likeBtn.classList.toggle("card__like-button_active")})),this._name=e.name,this._link=e.link,this._handleImageClick=n,this._cardSelector=i}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}setEventListeners(){this._cardImg.addEventListener("click",(()=>this._handlePreview())),this._cardDelBtn.addEventListener("click",this._handleDelCard),this._likeBtn.addEventListener("click",this._handleLikeBtn)}_handlePreview(){this._handleImageClick(this._name,this._link)}renderCard(){this._element=this._getTemplate(),this._likeBtn=this._element.querySelector(".card__like-button"),this._cardImg=this._element.querySelector(".card__image"),this._cardDelBtn=this._element.querySelector(".card__delete-button");const e=this._element.querySelector(".card__title");return this._cardImg.src=this._link,this._cardImg.alt=`Photo of ${this._name}`,e.textContent=this._name,this.setEventListeners(),this._element}}class n{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeBtn=this._popupElement.querySelector(".modal__close"),this.open=this.open.bind(this),this.close=this.close.bind(this),this._handleEscClose=this._handleEscClose.bind(this),this._handleOverlay=this._handleOverlay.bind(this)}open(){this._popupElement.classList.add("modal_opened"),this.setEventListeners()}close(){this._popupElement.classList.remove("modal_opened"),this.removeEventListeners()}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleOverlay(e){e.target.classList.contains("modal_opened")&&this.close()}setEventListeners(){document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._handleOverlay),this._closeBtn.addEventListener("click",this.close)}removeEventListeners(){document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._handleOverlay),this._closeBtn.removeEventListener("click",this.close)}}class s extends n{constructor(e,t){var i,n,s;super({popupSelector:e}),i=this,s=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()},(n=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(n="_handleSubmit"))in i?Object.defineProperty(i,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):i[n]=s,this._popupForm=this._popupElement.querySelector(".modal__form"),this._formInputs=this._popupForm.querySelectorAll(".modal__form-input"),this._handleFormSubmit=t}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}close(){this._popupForm.reset(),super.close()}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this._handleSubmit)}removeEventListeners(){super.removeEventListeners(),this._popupForm.removeEventListener("submit",this._handleSubmit)}}const r={inputSelector:".modal__form-input",submitButtonSelector:".modal__form-button",inactiveButtonClass:"modal__form-button_inactive",inputErrorClass:"modal__form-input_error",errorClass:"modal__error_visible"},o=document.querySelector(".cards__list"),l=document.querySelector("#profile-edit-button"),a=document.querySelector("#modal-profile-form"),c=document.querySelector("#modal-edit-title-input"),d=document.querySelector("#modal-edit-subtitle-input"),u=document.querySelector("#modal-add-card"),m=document.querySelector("#modal-add-card-form"),h=document.querySelector("#profile-add-card-button");function _(e){const t=new i(e,"#card-template",p).renderCard();o.prepend(t)}function p(e,t){b.open(e,t)}l.addEventListener("click",(()=>{!function(){const{name:e,description:t}=S.getUserInfo();c.value=e,d.value=t,E.open()}()})),h.addEventListener("click",(()=>{y.open(u)})),new class{constructor(e,t){let{items:i,renderer:n}=e;this._items=i,this._renderer=n,this._itemsList=t}renderItems(){this._items.forEach(this._renderer)}addItem(e){const t=this._renderer(e);this._itemsList.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:_},o).renderItems();const v=new e(r,a),f=new e(r,m);v.enableValidation(),f.enableValidation();const E=new s("#modal-edit-profile",(function(e){S.setUserInfo({name:e.title,description:e.subtitle})})),y=new s("#modal-add-card",(function(e){_({name:e.name,link:e.link}),y.close()})),b=new class extends n{open(e,t){const i=this._popupElement.querySelector(".modalPreview__image"),n=this._popupElement.querySelector(".modalPreview__title");i.src=t,n.textContent=e,i.alt=`Photo of ${e}`,super.open()}}({popupSelector:"#modal-preview"}),S=new class{constructor(e){let{nameSelector:t,descriptionSelector:i}=e;this._nameElement=document.querySelector(t),this._descriptionElement=document.querySelector(i)}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(e){let{name:t,description:i}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=i}}({nameSelector:"#profile-title",descriptionSelector:"#profile-subtitle"})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,