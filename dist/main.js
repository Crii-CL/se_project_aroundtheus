!function(){"use strict";const e={inputSelector:".modal__form-input",submitButtonSelector:".modal__form-button",inactiveButtonClass:"modal__form-button_inactive",inputErrorClass:"modal__form-input_error",errorClass:"modal__error_visible"},t=document.querySelector(".cards__list"),i=document.querySelector("#profile-edit-button"),s=document.querySelector("#modal-profile-form"),r=document.querySelector("#modal-edit-title-input"),n=document.querySelector("#modal-edit-subtitle-input"),o=(document.querySelector(".profile__image"),document.querySelector(".profile__edit-avatar")),a=document.querySelector("#avatar-form"),l=document.querySelector("#modal-add-card"),h=document.querySelector("#modal-add-card-form"),d=document.querySelector("#profile-add-card-button");class u{constructor(e,t){var i,s,r;i=this,r=()=>this._inputList.every((e=>e.validity.valid)),(s=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var s=i.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(s="_checkFormValidity"))in i?Object.defineProperty(i,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):i[s]=r,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}setEventListeners(){this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._formElement.addEventListener("reset",(()=>{setTimeout((()=>{this._toggleButtonState()}))})),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent=" ",t.classList.remove(this._errorClass)}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this.setEventListeners()}}function c(e,t,i){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var s=i.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}class m{constructor(e,t,i,s,r,n){c(this,"removeCard",(()=>{this._element.remove(),this._element=null})),c(this,"updateLikes",(e=>{this._likes=e,this.renderLikes()})),this._name=e.name,this._link=e.link,this._likes=e.likes,this._cardId=e._id,this._userId=t,this._ownerId=e.owner._id,this._handleImageClick=s,this._handleLikeClick=r,this._handleDelClick=n,this._cardSelector=i}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}setEventListeners(){this._cardImg.addEventListener("click",(()=>this._handlePreview())),this._cardDelBtn.addEventListener("click",(()=>this._handleDelClick(this._cardId))),this._likeBtn.addEventListener("click",(()=>this._handleLikeClick(this._cardId,this._isLiked())))}_handlePreview(){this._handleImageClick(this._name,this._link)}_isLiked(){return this._likes.some((e=>e._id===this._userId))}renderLikes(){this._cardCounter.textContent=this._likes.length,this._isLiked()?this._likeBtn.classList.add("card__like-button_active"):this._likeBtn.classList.remove("card__like-button_active")}renderCard(){this._element=this._getTemplate(),this._likeBtn=this._element.querySelector(".card__like-button"),this._cardImg=this._element.querySelector(".card__image"),this._cardDelBtn=this._element.querySelector(".card__delete-button"),this._cardCounter=this._element.querySelector(".card__like-counter");const e=this._element.querySelector(".card__title");return this._cardImg.src=this._link,this._cardImg.alt=`Photo of ${this._name}`,e.textContent=this._name,this.renderLikes(),this._userId!==this._ownerId&&this._cardDelBtn.remove(),this.setEventListeners(),this._element}}class _{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this.open=this.open.bind(this),this.close=this.close.bind(this),this._closeBtn=this._popupElement.querySelector(".modal__close"),this._openEditAvatar=document.querySelector(".profile__edit-avatar"),this._handleEscClose=this._handleEscClose.bind(this),this._handleOverlay=this._handleOverlay.bind(this)}open(){this._popupElement.classList.add("modal_opened"),this.setEventListeners()}close(){this._popupElement.classList.remove("modal_opened"),this.removeEventListeners()}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleOverlay(e){e.target.classList.contains("modal_opened")&&this.close()}setEventListeners(){document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._handleOverlay),this._closeBtn.addEventListener("click",this.close)}removeEventListeners(){document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._handleOverlay),this._closeBtn.removeEventListener("click",this.close)}}function p(e,t,i){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var s=i.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}class v extends _{constructor(e,t){let{handleFormSubmit:i,loadingButtonText:s}=t;var r,n,o;super({popupSelector:e}),r=this,o=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())},(n=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var s=i.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(n="_handleSubmit"))in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o,this._popupForm=this._popupElement.querySelector(".modal__form"),this._formInputs=this._popupForm.querySelectorAll(".modal__form-input"),this._submitBtn=this._popupElement.querySelector(".modal__form-button"),this._buttonText=this._submitBtn.textContent,this._handleFormSubmit=i,this._loadingButtonText=s}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}showLoading(){this._submitBtn.textContent=this._loadingButtonText}hideLoading(){this._submitBtn.textContent=this._buttonText}close(){this._popupForm.reset(),super.close()}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this._handleSubmit)}removeEventListeners(){super.removeEventListeners(),this._popupForm.removeEventListener("submit",this._handleSubmit)}}class b{constructor(e,t){let{items:i,renderer:s}=e;this._items=i,this._renderer=s,this._itemsList=t}renderItems(){this._items.forEach(this._renderer)}addItem(e){const t=this._renderer(e);this._itemsList.prepend(t)}}const f=new class{constructor(e){let{baseUrl:t,headers:i}=e;this._baseUrl=t,this._headers=i}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}updateProfileInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._checkResponse)}addNewCard(e,t){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}getLikes(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._checkResponse)}addLikes(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}removeLikes(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"2fee5a13-ea32-4770-a359-bbaf2b3da470","Content-Type":"application/json"}});let E,S;function y(e){const i=new m(e,E,"#card-template",((e,t)=>{w.open(e,t)}),((e,t)=>{t?f.removeLikes(e).then((e=>{i.updateLikes(e.likes)})).catch((e=>{console.log(e)})):f.addLikes(e).then((e=>{i.updateLikes(e.likes)})).catch((e=>{console.log(e)}))}),(e=>{C.setSubmitAction((()=>(C.showLoading(),f.deleteCard(e).then((()=>{i.removeCard(),C.close()})).catch((e=>{console.log(e)})).finally((()=>{C.hideLoading()}))))),C.open()}));t.prepend(i.renderCard())}f.getAppInfo().then((e=>{let[i,s]=e;E=s._id,B.setUserInfo(s),B.setAvatar(s),S=new b({items:i,renderer:y},t),S.renderItems()})).catch((e=>{console.log(e)}));const g=new v("#avatar-form",{handleFormSubmit:function(e){let{avatar:t}=e;return g.showLoading(),f.updateAvatar(t).then((e=>{B.setAvatar({avatar:e.avatar})})).then((()=>{this.close()})).catch((e=>{console.log(e)})).finally((()=>{g.hideLoading()}))},loadingButtonText:"Saving..."}),L=new v("#modal-edit-profile",{handleFormSubmit:function(e){return L.showLoading(),f.updateProfileInfo(e.title,e.subtitle).then((()=>{B.setUserInfo({name:e.title,about:e.subtitle}),L.close()})).catch((e=>{console.log(e)})).finally((()=>{L.hideLoading()}))},loadingButtonText:"Saving..."}),k=new v("#modal-add-card",{handleFormSubmit:function(e){let{name:t,link:i}=e;return k.showLoading(),f.addNewCard(t,i).then((e=>{y(e)})).then((()=>{this.close()})).catch((e=>{console.log(e)})).finally((()=>{k.hideLoading()}))},loadingButtonText:"Saving..."}),C=new class extends _{constructor(e,t){super({popupSelector:e}),p(this,"setSubmitAction",(e=>{this._handleSubmitCallback=e})),p(this,"_handleSubmit",(e=>{e.preventDefault(),this._handleSubmitCallback()})),this._loadingButtonText=t,this._submitBtn=this._popupElement.querySelector(".modal__form-button"),this._buttonText=this._submitBtn.textContent}setEventListeners(){super.setEventListeners(),this._popupElement.querySelector("#confirm-del-form").addEventListener("submit",this._handleSubmit)}removeEventListeners(){super.removeEventListeners(),this._popupElement.removeEventListener("submit",this._handleSubmit)}showLoading(){this._submitBtn.textContent=this._loadingButtonText}hideLoading(){this._submitBtn.textContent=this._buttonText}}("#confirm-del-modal","Saving..."),w=new class extends _{open(e,t){const i=this._popupElement.querySelector(".modalPreview__image"),s=this._popupElement.querySelector(".modalPreview__title");i.src=t,s.textContent=e,i.alt=`Photo of ${e}`,super.open()}}({popupSelector:"#modal-preview"}),B=new class{constructor(e){let{nameSelector:t,aboutSelector:i,avatarSelector:s}=e;this._nameElement=document.querySelector(t),this._aboutElement=document.querySelector(i),this._avatarElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent}}getAvatar(){return{avatar:this._avatarElement.src}}setAvatar(e){let{avatar:t}=e;this._avatarElement.src=t}setUserInfo(e){let{name:t,about:i}=e;this._nameElement.textContent=t,this._aboutElement.textContent=i}}({nameSelector:"#profile-title",aboutSelector:"#profile-subtitle",avatarSelector:".profile__image"}),I=new u(e,s),q=new u(e,h),x=new u(e,a);I.enableValidation(),q.enableValidation(),x.enableValidation(),i.addEventListener("click",(()=>{!function(){const{name:e,about:t}=B.getUserInfo();r.value=e,n.value=t,L.open()}()})),d.addEventListener("click",(()=>{k.open(l)})),o.addEventListener("click",(()=>{g.open("#avatar-form")}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,